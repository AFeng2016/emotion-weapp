<script>
import wepy from 'wepy';
import { BaseURL } from './config';
import 'wepy-async-function';

export default class extends wepy.app {
  config = {
    pages: ['pages/index', 'pages/action', 'pages/preview'],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  };

  globalData = {
    token: '', // JWT token
    user: null,
    appCode: '' // 小程序码本地存放路径
  };

  constructor() {
    super();
    this.use('requestfix');
  }

  async onLaunch() {
    const expire = await this.checkAuth();
    if (!this.globalData.token || expire) {
      this.globalData.token = await this.login();
    }
  }

  // 检查 access_key 是否过过期
  checkAuth() {
    return new Promise((resolve, reject) => {
      wepy.checkSession({
        success() {
          resolve(false);
        },
        fail() {
          resolve(true);
        }
      });
    });
  }

  // 登录
  login() {
    return new Promise((resolve, reject) => {
      wepy.login({
        success: res => {
          if (res.code) {
            // 获取token
            wepy.request({
              method: 'POST',
              url: `${BaseURL}/token`,
              data: { code: res.code },
              success: res => {
                if (res.data.token) {
                  resolve(res.data.token);
                }
              }
            });
          }
        }
      });
    });
  }

  // 同步获取授权认证请求头
  authHeader() {
    return new Promise(resolve => {
      if (!this.globalData.token) {
        const timer = setInterval(() => {
          if (this.globalData.token) {
            resolve({ Authorization: `Bearer ${this.globalData.token}` });
            clearInterval(timer);
          }
        }, 50);
      } else {
        resolve({ Authorization: `Bearer ${this.globalData.token}` });
      }
    });
  }

  getUserInfo(callback) {
    if (this.globalData.user) {
      callback(this.globalData.user);
      return;
    }

    wepy.getUserInfo({
      success: res => {
        this.globalData.user = {
          avatar: res.userInfo.avatarUrl,
          gender: res.userInfo.gender,
          nickname: res.userInfo.nickName
        };
        callback(this.globalData.user);
      }
    });
  }

  getAppCode() {
    return new Promise(resolve => {
      if (this.globalData.appCode) {
        resolve(this.globalData.appCode);
      } else {
        wepy.request({
          url: `${BaseURL}/code`,
          method: 'GET',
          success: res => {
            if (res.data.url) {
              wepy.downloadFile({
                url: res.data.url,
                success: res => {
                  // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
                  if (res.statusCode === 200) {
                    wepy.saveFile({
                      tempFilePath: res.tempFilePath,
                      success: res => {
                        this.globalData.appCode = res.savedFilePath;
                        resolve(res.savedFilePath);
                      }
                    });
                  }
                }
              });
            }
          }
        });
      }
    });
  }
}
</script>

<style lang="less">
@import './variables';

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}

.btn {
  font-size: 13pt;
  line-height: 85rpx;
  height: 85rpx;
  background: @green;
  color: @white;
  text-align: center;
  border-radius: 100rpx;
  margin: 40rpx;
}

.btn-hover {
  opacity: 0.8;
}
</style>
