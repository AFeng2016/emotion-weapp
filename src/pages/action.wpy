<template>
  <view>
    <camera binderror="userRefuse" device-position="front" flash="off" class="camera">
       <cover-view class="emotion-name">
        <cover-view class="title">{{ emotions[current] }}</cover-view>
        <cover-view class="tips">请露出幸福的表情</cover-view>
      </cover-view>
    </camera>
    <progress active active-mode="forwards" percent="{{ percent }}" stroke-width="3" activeColor="#69c3aa" backgroundColor="#ccc"/>
    <button @tap="takePhoto" class="btn" hover-class="btn-hover">拍 照</button>
    <canvas class="canvas" style=" width: {{ canvas.width }}px;height:{{ canvas.height }}px;" canvas-id="action-img" />
  </view>
</template>
<script>
// 表演页面
import wepy from 'wepy';

export default class Action extends wepy.page {
  config = {
    disableScroll: true,
    enablePullDownRefresh: false,
    navigationBarTitleText: '开始表演',
    navigationBarBackgroundColor: '#69c3aa'
  };

  data = {
    src: '', // 多表情集合图片
    emotions: ['生气', '轻蔑', '厌恶', '恐惧', '幸福', '中立', '伤心', '惊喜'], // 表情
    current: 0, // 当前拍照进度索引

    // 绘图相关设定
    canvas: {
      x: 0, // X轴起点
      y: 0, // Y轴起点
      margin: 10, // 外边距
      num: 2, // 每排存放张数
      width: 1000, // 画布宽度
      height: 1500, // 画布高度
      ctx: wepy.createCanvasContext('action-img') // canvas 画布
    }
  };

  methods = {
    // 拍照
    takePhoto() {
      // 判断是否拍摄完成
      if (this.current + 1 > this.emotions.length);

      const camera = wepy.createCameraContext();
      camera.takePhoto({
        quality: 'high',
        success: res => {
          this.current++; // 进入下一个任务
          this.drawlInCanvas(res.tempImagePath, res.width, res.height);
          this.$apply();
        }
      });
    },

    // 用户拒绝调用摄像头
    userRefuse(event) {
      // console.log(event.detail);
    }
  };

  // 把照片画到画布
  drawlInCanvas(path, width, height) {
    // 填充背景颜色
    // this.canvas.ctx.setFillStyle('#dd4b55');
    // this.canvas.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);
    // this.canvas.ctx.fill();

    const inWidth =
      this.canvas.width / this.canvas.num - this.canvas.margin * 2; // 画布上图片宽度
    const inHeight = inWidth / width * height; // 画布上图片高度

    const x = this.canvas.x + this.canvas.margin;
    const y = this.canvas.y + this.canvas.margin;

    this.canvas.ctx.drawImage(path, x, y, inWidth, inHeight);

    this.canvas.ctx.draw(true, res => {
      wepy.canvasToTempFilePath({
        x,
        y,
        canvasId: 'action-img',
        success: res => {
          this.canvas.x = inWidth + this.canvas.margin * 2;
          this.canvas.y = inHeight + this.canvas.margin * 2;
        }
      });
    });
  }

  computed = {
    // 计算进度百分比
    percent() {
      const len = this.emotions.length;

      return this.current / len * 100;
    }
  };
}
</script>

<style lang="less">
@import '../variables';

.camera {
  width: 100%;
  height: 950rpx;
}

.emotion-name {
  text-align: center;
  position: relative;
  top: 700rpx;
}

.title {
  color: @green;
  padding: 40rpx;
  font-size: 24pt;
  font-weight: bold;
  text-align: center;
  letter-spacing: 20rpx;
}

.tips {
  color: @green;
  font-size: 12pt;
  text-align: center;
}

// .canvas {
//   position: absolute;
//   left: 0;
//   top: -100%;
// }
</style>

